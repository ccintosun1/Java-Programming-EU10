package day27_WrapperClasses;public class _05_WrapperClassesMethods {    public static void main(String[] args) {    /*        Wrapper classes:   convert to the primitives to the object		1. parse methods: converts String to primitive		2. valueOf methods: converts String to wrapper class        */        System.out.println("-------- 1. parse methods: converts String to primitive-------");        String str = "123";        int num = Integer.parseInt(str); // convert int primitives        System.out.println(num + 1); // 124        System.out.println(str + 1); // 1231        //----------------- Decimal numbers double --------------------- //        String str2 = "10.5";        double num2 = Double.parseDouble(str2);        System.out.println(num2);   // 10.5        System.out.println(num2 + 1); // 11.5        System.out.println("-------- MAX.VALUE - MIN.VALUE ()These are not Method-------");        int max = Integer.MAX_VALUE;        int min = Integer.MIN_VALUE;        System.out.println(max); // 2147483647        System.out.println(min); //-2147483648        long l1 = Long.MAX_VALUE;        long l2 = Long.MIN_VALUE;        System.out.println(l1);  //  9223372036854775807        System.out.println(l2);  // -9223372036854775808        System.out.println("----------Boolean.parseBoolean()Method-----------");        String s1 = "true";        boolean r1 = Boolean.parseBoolean(s1); // true        String s2 = "false";        boolean r2 = Boolean.parseBoolean(s1); // false        String s3 = "maybe";        boolean r3 = Boolean.parseBoolean(s1); // false        System.out.println(r1); // false        System.out.println("-------- 2. valueOf methods: converts String to wrapper class-------");        //----- Integer ------        String s4 = "123";        Integer x = Integer.valueOf(s4);  // wrapper class yani object        System.out.println(x);  // 123  Integer value        int y = Integer.valueOf(s4); // unboxing  Integer        //             or        int y1 = x;                      // unboxing  Integer        System.out.println(x);  // 123   // wrapper class        System.out.println(y);  // 123   // primitive data        //------ Double-------        String s5 = "1.5";        Double z = Double.valueOf(s5); // Double wrapper classout        System.out.println(z);        // Result you can use parse and valueOf and convert primitive and wrapper class each other        System.out.println("--------------Character.isDigit() Method;-------------------");        // isDigit() Method;        char ch1 = '0';        boolean r4 = Character.isDigit(ch1);        System.out.println(r4); // true        //-----        char ch2 = 'A';        boolean r5 = Character.isDigit(ch1);        System.out.println(r4); // false ,because it is character        System.out.println("--------------Character.isLetter() Method;-------------------");        char ch3 = 'A';        boolean r6 = Character.isLetter(ch3);        System.out.println(r6);  // true        System.out.println("-----if data is a Special character like '!' (special char)-----");        System.out.println("--------------Character.isLetterOrDigit() Method;-------------------");        char ch4 = '!';        boolean r7 = !Character.isLetterOrDigit(ch4);        System.out.println(r7);  // true        System.out.println("--------------Character.isUpperCase() Method;-------------------");        boolean r8 = Character.isUpperCase(ch3); // true        System.out.println(r8);        System.out.println("--------------Character.isLowerCase() Method;-------------------");        boolean r9 =Character.isLowerCase(ch3);  // false        System.out.println(r9);        System.out.println("------------Find digits and concat them and print result-----------------");                String s = "ab1cde2efg3hi4";        int sum = 0;        for (char each : s.toCharArray()) {            if (Character.isDigit(each)){                // sum+=each;     if we do like this we can use char(boyle de olur)                sum += Integer.parseInt(""+each);            }        }        System.out.println("sum = " + sum);  //10    }}