package utility;public class MathUtility {    // 2.1 Create a method that can return the sum of two integers    public static int sum(int a, int b) {        return a + b;    }    public static double sum(double a, double b) {        return a + b;    }    // 2.2 Create a method that can return the sum of two decimal numbers    public static int subtract(int a, int b) {        return a - b;    }    public static double subtract(double a, double b) {        return a - b;    }    //2.5 Create a method that can return the multiplication of two integers    public static int multiplication(int a, int b) {        return a * b;    }    public static double multiplication(double a, double b) {        return a * b;    }    //2.7 Create a method that passes two double parameters and returns the division result    public static double division(double a, double b) {        return a / b;    }    //2.8 Create a method that can check if an integer is an even number    //2.9 Create a method that can check if an integer is an odd number    public static void evenOrOdd(int a) {        if (a % 2 == 0) {            System.out.println(a + " is an even number");        } else {            System.out.println(a + " is an odd number");        }    }    //2.10 Create a method that can return the maximum number between two integers        public static int maxNumber(int a, int b) {        int max = -2128373736;        if (a!=b) {            if (a > b) {                max = a;            } else {                max = b;            }        }else{            System.exit(0);        }        return max;    }    //2.11 Create a method that can return the maximum number between two decimal numbers    public static double maxNumber(double a, double b) {        double max = -212837339738765455566677765546.5;        if (a!=b) {            if (a > b) {                max = a;            } else {                max = b;            }        }else{            System.exit(0);        }        return max;    }    //2.12 Create a method that can return the minimum number between two integers    public static int minNumber(int a, int b) {        int min = 2128373736;        if (a!=b) {            if (a < b) {                min = a;            } else {                min = b;            }        }else{            System.exit(0);        }        return min;    }	//	2.13 Create a method that can return the minimum number between two decimal numbers    public static double minNumber(double a, double b) {        double min = 2128373736;        if (a!=b) {            if (a < b) {                min = a;            } else {                min = b;            }        }else{            System.exit(0);        }        return min;    }    //2.14 Create a method that can return the square of an integer    //Ex: square(2) ==> 4    public static int square(int a){        return a*a;    }    //2.15 Create a method that can return the square of a double    public static double square(double a){        return a*a;    }    //2.16 Create a method that can return the cube of an integer    public static int qube(int a){        return a*a*a;    }    //2.17 Create a method that can return the cube of a double    public static double qube(double a){        return a*a*a;    }}/*1. Create a class called MathUtility under the utility package:			2.1 Create a method that can return the sum of two integers			2.2 Create a method that can return the sum of two decimal numbers			2.3 Create a method that can return the subtraction of two integers			2.4 Create a method that can return the subtraction of two decimals			2.5 Create a method that can return the multiplication of two integers			2.6 Create a method that can return the multiplication of two decimals			2.7 Create a method that passes two double parameters and returns the division result			2.8 Create a method that can check if an integer is an even number			2.9 Create a method that can check if an integer is an odd number			2.10 Create a method that can return the maximum number between two integers			2.11 Create a method that can return the maximum number between two decimal numbers			2.12 Create a method that can return the minimum number between two integers			2.13 Create a method that can return the minimum number between two decimal numbers			2.14 Create a method that can return the square of an integer					Ex: square(2) ==> 4			2.15 Create a method that can return the square of a double			2.16 Create a method that can return the cube of an integer			2.17 Create a method that can return the cube of a double */