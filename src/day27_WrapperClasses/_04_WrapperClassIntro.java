package day27_WrapperClasses;public class _04_WrapperClassIntro {    public static void main(String[] args) {        int num1 = 200;        // Long n1 = num1;   Compile error they would be same, wrapper clas and primitives        // int : Integer / long : Long / etc...        Integer n1 = num1;  // autoboxing        int num2 = n1;       // unboxing   implicitly        System.out.println("--------------------------------");        Integer integerValue = 100;        long longValue =  integerValue;   // unboxing        System.out.println("------------Unboxing---------------");        Byte b1 = 25;    // wrapper class can covert all data as primitive in limitation        byte a1 = b1;        short a2 = b1;        int a3 = b1;        long a4 = b1;        System.out.println("----------Autoboxing---------------");        int num3 = 200;        // Long l2 =num3;   compile error   because primitives can convert only own wrapper class        // Double d1 = num3;  compile error        Integer num4 = num3;  // autoboxing        System.out.println("-------converted Integer object to Integer wrapper class-----");        Integer z = 900;        Integer y =z;     // it is not unboxing or autoboxing we don't have primitive                          // it is converted Integer object to Integer wrapper class        System.out.println("-----------------------------------");        Integer v = z+y+100;  // we can use like primitives but they are not primitive they stored in HEAP memory        System.out.println("v = " + v);   // 1900        // We are using wrapper class for collections and map        System.out.println("-----------------------------------");        int[] numbers1 = {1,2,3,4,5};        Integer[] numbers2 = {1,2,3,4,5};        // WHY we are using wrapper class ?        // Because of wrapper class is object, we can use method's on it,        // that's why we are using wrapper class, that's are doing methods        /*        Wrapper classes:   convert to the primitives to the object		1. parse methods: converts String to primitive		2. valueOf methods: converts String to wrapper class        */    }}