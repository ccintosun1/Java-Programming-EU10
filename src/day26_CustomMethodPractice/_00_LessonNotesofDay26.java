package day26_CustomMethodPractice;public class _00_LessonNotesofDay26 {    /*    Java Day26Topics: Custom Methods Practicepackage name: day26_CustomMethodsPracticewarmup tasks:	1. Create a class named FrequencyOfElement:			1.1 Create a method that passes two parameters: an integer array and an Integer element. The method returns the frequency of the given integer element from the integer array			1.2 Create a method that passes two parameters: a double array and a double element. The method returns the frequency of the given integer from the array			1.3 Create a method that passes two parameters: a char array and a char element. The method returns the frequency of the given char element from the char array			1.4 Create a method that passes two parameters: a String array and a String element. The method returns the frequency of the given String element from the String array	2. Create a class named RemoveElements:			2.1 Create a method that passes two parametetrs: an integer array and an integer index. the method removes the element at the given index of the array and returns the new array					Ex:						int[] arr = {10,20,30,40}						removeElement(arr, 2) ==> {10, 20, 40}			2.2 Create a method that passes two parametetrs: a double array and an integer index. the method removes the element at the given index of the array and returns the new array			2.3 Create a method that passes two parametetrs: a char array and an integer index. the method removes the element at the given index of the array and returns the new array			2.4 Create a method that passes two parametetrs: a String array and an integer index. the method removes the element at the given index of the array and returns the new array1. Create a class called MathUtility under the utility package:			2.1 Create a method that can return the sum of two integers			2.2 Create a method that can return the sum of two decimal numbers			2.3 Create a method that can return the subtraction of two integers			2.4 Create a method that can return the subtraction of two decimals			2.5 Create a method that can return the multiplication of two integers			2.6 Create a method that can return the multiplication of two decimals			2.7 Create a method that passes two double parameters and returns the division result			2.8 Create a method that can check if an integer is an even number			2.9 Create a method that can check if an integer is an odd number			2.10 Create a method that can return the maximum number between two integers			2.11 Create a method that can return the maximum number between two decimal numbers			2.12 Create a method that can return the minimum number between two integers			2.13 Create a method that can return the minimum number between two decimal numbers			2.14 Create a method that can return the square of an integer					Ex: square(2) ==> 4			2.15 Create a method that can return the square of a double			2.16 Create a method that can return the cube of an integer			2.17 Create a method that can return the cube of a double     */}