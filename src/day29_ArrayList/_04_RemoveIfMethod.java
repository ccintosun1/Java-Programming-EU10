package day29_ArrayList;import utility.StringUtility;import java.util.ArrayList;import java.util.Arrays;public class _04_RemoveIfMethod {    public static void main(String[] args) {        System.out.println("----------------removeIf (predicate ) COK ONEMLI --------------------");        ArrayList<Integer> list = new ArrayList<>();        list.addAll(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9));        list.addAll(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9));        list.addAll(Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9));        System.out.println(list);   // [1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9, 1, 2, 3, 4, 5, 6, 7, 8, 9]        // removeIf(): when we remove under a condition (if the elements we want to remove are unknown)        // YOU CAN USE REMOVE IF METHOD IN ANY COLLECTION TYPE       /* collections lar dinamic old. icin her silmede icindeki elementlerin yeri degisiyor. Bu sebeple saglikli sonuc vermiyor,       for icinde remove kullanmak, bu sebeple removeIf kullanmak daha iyi oluyor.        for (int i = 0; i < list.size(); i++) {            if (list.get(i) % 2 != 0) {                list.remove(i);    // dinamic size oldugu icin hep degisir. Bu sebeple saglikli olmaz , 1 lerin olmamasi lazim mesela            }        }        System.out.println(list);   // [2, 4, 6, 8, 1, 2, 4, 6, 8, 1, 2, 4, 6, 8]*/        list.removeIf(p -> p < 5);  // ArrayListteki 5 ten kucuk olan sayilari sil.        System.out.println(list);    // [5, 6, 7, 8, 9, 5, 6, 7, 8, 9, 5, 6, 7, 8, 9]        list.removeIf(p -> p % 2 == 0);   // ArrayListteki 2 ye bolumunden kalan sifir olan yani cift sayilari sil.        System.out.println(list);    //  [5, 7, 9, 5, 7, 9, 5, 7, 9]        System.out.println("----------------removeIf (predicate ) COK ONEMLI ornek --------------------");        ArrayList<String> list3 = new ArrayList<>();        list3.addAll(Arrays.asList("Java", "Python", "JavaScript", "C#", "C++", "Java", "Java"));        list3.removeIf( p -> p.startsWith("J") );   // j le baslayan her elementi sil        System.out.println(list3);  // [Python, C#, C++]        System.out.println("----------------removeIf (predicate : Herhangi bisi olabilir each gibi ) Palindrome --------------------");        ArrayList<String> list4 = new ArrayList<>();        list4.addAll(Arrays.asList("Anna", "Racecar" , "Level", "Eye", "Java", "Python", "Cydeo"));        list4.removeIf( each -> !StringUtility.isPalindrome(each)); // palindrome olmayanlari sil        System.out.println(list4);  // [Anna, Racecar, Level, Eye]    }}