package day09_IfStatements.day24_CustomMethod_Return;public class _01_CustomMethod_VoidExamples {    public static void main(String[] args) {        System.out.println("------ Method 1 -------------------");        initials("Cydeo", "School");            // initial = C.S        System.out.println("----------- Method 2 ---------------");        domain("ccintosun1@gmail.com");    // domain = gmail        System.out.println("------- Method 2 Different Example ----");        String[] emails = {"ccintosun1@gmail.com", "josh@yahoo.com", "jim@cydeo.com", "Elminur@icloud.com"};        for (String email : emails) {            domain(email);           /*            domain = gmail            domain = yahoo            domain = cydeo            domain = icloud            */        }        System.out.println("--------------- Method 3 ------------");        nameOfTheMonth(3); // March        System.out.println("--------------- Method 4 ------------");        nameOfDay(5); // Friday        System.out.println("--------------- Method 6 ------------");        ageGroup(90); // Old Senior Citizen        System.out.println("");    }    // 1. Create a method that can display the initials of the person.  initials(String firstName,String lastName)    public static void initials(String firstName, String lastName) {        String initial = firstName.charAt(0) + "." + lastName.charAt(0);        initial = initial.toUpperCase();        System.out.println("initial = " + initial);    }    // 2. Create a method that can display the domain of the email    public static void domain(String email) {        String domain = email.substring(email.indexOf("@") + 1, email.indexOf("."));        System.out.println("domain = " + domain);    }    // 3. Create a method that can display the name of the month based on the given number to the method    public static void nameOfTheMonth(int num) {        String result = "";        switch (num) {            case 1:                result = "jan";                break;            case 2:                result = "Feb";                break;            case 3:                result = "Mar";                break;            case 4:                result = "Apr";                break;            case 5:                result = "May";                break;            case 6:                result = "Jun";                break;            case 7:                result = "Jul";                break;            case 8:                result = "Aug";                break;            case 9:                result = "Sep";                break;            case 10:                result = "Oct";                break;            case 11:                result = "Now";                break;            case 12:                result = "Dec";                break;            default:                result = "Invalid Number";        }        System.out.println(result);    }    // 4. Create a method that can print the name of the day based on the given number to the method    public static void nameOfDay(int day) {        String name = "";        if (day <1  || day > 7) {  //  if the number is invalid. We use it in order to performance            System.out.println("Invalid");            return;  // exits nameOfDay method (only current method)        }            name = (day == 1) ? "Monday" : (day == 2) ? "Tuesday" : (day == 3) ? "Wednesday" : (day == 4) ? "Thursday"                    : (day == 5) ? "Friday" : (day == 6) ? "Saturday" : "Sunday";            System.out.println(name);    }    /*6. ageGroups            age groups are:                infant (1 - 2), Toddler (3 - 5), Kid (6 - 9), Pre- Teen (10 - 12),                Teenager. (13 - 17), Young Adult (18 - 20), Adult (21 - 39),                Young Middle-Aged Adult (40 - 49), Middle-Aged Adult (50 - 54),                Very Young Senior Citizen (55 - 64), Young Senior Citizen (65 - 74),                Senior Citizen (75 - 84),                Old Senior Citizen (85+)*/    public static void ageGroup(int age) {        String group = "";        if (age >= 1) {            group = (age <= 2) ? "infant" : (age <= 5) ? "Toddler" : (age <= 9) ? "Kid" : (age <= 12) ? "Pre-Teen" : (age <= 17) ? "Teenager"                    : (age <= 20) ? "Young Adult" : (age <= 39) ? "Adult" : (age <= 49) ? "Young Middle-Aged Adult"                    : (age <= 54) ? "Middle-Aged Adult":(age<=64)?"Very Young Senior Citizen"                    : (age<=74)?"Young Senior Citizen":(age<=84)?"Senior Citizen":"Old Senior Citizen";        } else {            System.out.println("Age cannot be smaller than 1");        }        System.out.println(group);    }}/*	1. Create a method that can display the initials of the person	2. Create a method that can display the domain of the email	3. Create a method that can display the name of the month based on the given number to the method	4. Create a method that can print the name of the day based on the given number to the method    5. Create a method that can print how many days a month has    6. ageGroups            age groups are:                infant (1 - 2), Toddler (3 - 5), Kid (6 - 9), Pre- Teen (10 - 12),                Teenager. (13 - 17), Young Adult (18 - 20), Adult (21 - 39),                Young Middle-Aged Adult (40 - 49), Middle-Aged Adult (50 - 54),                Very Young Senior Citizen (55 - 64), Young Senior Citizen (65 - 74),                Senior Citizen (75 - 84),                Old Senior Citizen (85+)*/