package utility;public class BooleanUtility {    public static void main(String[] args) {        //-----Strong Password 1 ----------//        String key = "3546.Sokak";        boolean isStrongKey = isStrongPassword(key);        System.out.println("isStrongKey = " + isStrongKey);   // true        System.out.println("------------------------------------------------");        //-----Strong Password 2 ----------//        String key2 = "WoodenSpoon123@";        boolean isStrongKey2 = isStrongPassword2(key2);        System.out.println("isStrongKey2 = " + isStrongKey2);  // true    }    //------------------ isStrongPassword ----------------------//    public static boolean isStrongPassword(String password) {        boolean r1 = password.length() >= 8 && !password.contains(" ");        boolean r2 = false; // has UpperCse Letter        boolean r3 = false; // has LowerCase Letter        boolean r4 = false; // has special character        boolean r5 = false; // has digit        char[] chars = password.toCharArray();        for (char each : chars) {            if (Character.isUpperCase(each)) {                r2 = true;            } else if (Character.isLowerCase(each)) {                r3 = true;            } else if (!Character.isDigit(each)) {                r5 = true;            } else {                r4 = true;            }        }        boolean isStrongPassword = r1 && r2 && r3 && r4 && r5;        return isStrongPassword;    }    //------------------ isStrongPassword2 ----------------------//    public static boolean isStrongPassword2(String password) {        int countUpperCase = 0;        int countLowerCase = 0;        int countDigits = 0;        int countSpecialCharacter = 0;        for (int i = 0; i < password.length(); i++) {            char each = password.charAt(i);            if (Character.isUpperCase(each)) {                countUpperCase++;            } else if (Character.isLowerCase(each)) {                countLowerCase++;            } else if (Character.isDigit(each)) {                countDigits++;            } else {                countSpecialCharacter++;            }        }        System.out.println("countUpperCase = " + countUpperCase);        System.out.println("countLowerCase = " + countLowerCase);        System.out.println("countDigits = " + countDigits);        System.out.println("countSpecialCharacter = " + countSpecialCharacter);        boolean hasUpperCase = countUpperCase > 0;        boolean hasLowerCase = countLowerCase > 0;        boolean hasDigit = countDigits > 0;        boolean hasSpecialCharacter = countSpecialCharacter > 0;        boolean strongPassword = password.length() >= 8 && !password.contains(" ") && hasUpperCase && hasLowerCase && hasDigit && hasSpecialCharacter;        return strongPassword;    }}/* Write a program that can verify if a password is a strong password. Characteristics of strong passwords are:                1. Password MUST be at least have 8 characters long, and should not contain space                2. PassWord should at least contain one upper case letter                3. PassWord should at least contain one lower case letter                4. Password should at least contain one special characters                5. Password should at least contain a digit */