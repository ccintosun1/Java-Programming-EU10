package day28_ArrayList;public class _00_LessonNotes {/*Java Day28Topic: ArrayListpackage name: day28_ArrayListWarmup tasks:	1. Write a program that can verify if a password is a strong password. Characteristics of strong passwords are:        1.1 Password must be at least 8 characters long, and should not contain space        1.2 PassWord should at least contain one upper-case letter        1.3 PassWord should at least contain one lowercase letter        1.4 Password should at least contain one special character        1.5 Password should at least contain a digitInsert:	arr = {1,2,3,4,5};	insert(arr, 2, 40) ==> {1,2, 40,3,4,5 }Data Structure:	Array: size is fixed, supports both primitives & non-primitives	Collection: size is dynamic, does not support primitivesArrayList: part of the collection. internally uses the arrayArrayList Methods:	add(Data): adds the data after the last index of the ArrayList	add(index, Data): inserts the data at the given index	size(): returns the total number of elements	get(index): returns the element at the given index	set(index,  Data): replaces the element at the given index with the new element.	remove(int index): removes the element at the given index	remove(Object): removes the given object from ArrayList, returns boolean	clear(): remove all the elements of the ArrayList, size will be 0	indexOf(Data): returns the first matching element's index number, returns int	lastIndexOf(Data): returns the last matching element's index number, returns int	contains(Data): returns true if the element is contained in the ArrayList, otherwise returns false	equals(ArrayList): returns true if two ArrayList are equal (same elements in the same order), otherwise returns false//--------------------------------------------------------------//1. write a program that can set the last element of the Integer arraylist to zero	            ex:	                list = [1,2,3,4,5];	                output: [1,2,3,4,0];2. write a program that can swap the first and last elements of an integer arraylist	            ex:	                list = [1,2,3,4,5];	                output: [5,2,3,4,1];3. write a program that can multiply each odd number by 2	            ex: list = [1,2,3,4,5];	                output: [2,2,6,4,10]4. write a program that can combine two String arrays into one arrayList	            ex:	                arr1 = {"A", "B", "C"};	                arr2 = {"D", "E", "F", "G"};	                list ==> {"A", "B", "C", "D", "E", "F", "G"}5. Write a program that can find the maximum number from an ArrayList of integers		Ex:			list = [1,2,3,4,5];			output:				56. Write a program that can find the minimum number from an ArrayList of integers		Ex:			list = [1,2,3,4,5];			output:				17. Write a program that can return the first duplicated element from an arrayList of Integer		Ex:			list = [1,2,2,3,4,4,5,6,7,7];			output:				28. Given the following arraylists:		ArrayList<Integer>  scores = new ArrayList<>();  		scores.addAll( Arrays.asList(100, 90, 75, 85, 65, 85, 55, 45, 73, 73, 35, 47));  		ArrayList<Integer> gradeOfA = new ArrayList<>(); // 90 ~ 100        ArrayList<Integer> gradeOfB = new ArrayList<>(); // 80 ~ 89        ArrayList<Integer> gradeOfC = new ArrayList<>(); // 70 ~ 79        ArrayList<Integer> gradeOfD = new ArrayList<>(); // 60 ~ 69        ArrayList<Integer> gradeOfF = new ArrayList<>(); // 0 ~ 59        Write a program that can count the total numbers of grade A, B, C, D and F */}